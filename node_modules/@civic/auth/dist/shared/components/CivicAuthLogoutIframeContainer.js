"use client";
import { jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
import { CivicAuthIframe } from "../../shared/components/CivicAuthIframe.js";
import { useIframe } from "../../shared/hooks/index.js";
import { LoadingIcon } from "./LoadingIcon.js";
import { IframeChrome } from "./CivicAuthIframeContainer.js";
import { useIsClient } from "usehooks-ts";
import { useCallback } from "react";
import { getIframeRef } from "../lib/iframeUtils.js";
import { LOGOUT_SUCCESS_TEXT } from "../../constants.js";
const CivicAuthLogoutIframeContainer = ({ isLoading = false, }) => {
    const { logoutIframeRef } = useIframe();
    const isClient = useIsClient();
    const processLogoutIframeUrl = useCallback(() => {
        if (logoutIframeRef && logoutIframeRef.current) {
            const ref = getIframeRef(logoutIframeRef.current);
            if (!ref?.contentWindow) {
                return;
            }
            try {
                const iframeBody = ref.contentWindow.document.body.innerHTML;
                // If we have LOGOUT_SUCCESS_TEXT in the body, we know the logout succeeded on the server,
                // and we should redirect the parent to the post logout success URL indicated in the included link tag.
                if (iframeBody.includes(LOGOUT_SUCCESS_TEXT)) {
                    const link = ref.contentWindow.document.querySelector("a[rel='civic-auth-post-logout-redirect-url']");
                    if (link) {
                        const redirectUrl = link.getAttribute("href");
                        if (redirectUrl && redirectUrl !== "#") {
                            window.location.href = redirectUrl;
                            return true;
                        }
                    }
                }
            }
            catch {
                // ignore errors while waiting for redirect
            }
        }
        return false; // Haven't processed the URL yet
    }, [logoutIframeRef]);
    // don't render the in server-mode as the appearance changes after load
    return !isClient ? null : (_jsxs(IframeChrome, { isFrameLoaded: true, children: [isLoading ? (_jsx("div", { id: "civic-auth-loading-icon-wrapper", style: {
                    position: "absolute",
                    inset: 0,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                }, children: _jsx(LoadingIcon, {}) })) : null, _jsx(CivicAuthIframe, { ref: logoutIframeRef, id: "civic-auth-logout-iframe", onLoad: processLogoutIframeUrl })] }));
};
export { CivicAuthLogoutIframeContainer };
//# sourceMappingURL=CivicAuthLogoutIframeContainer.js.map