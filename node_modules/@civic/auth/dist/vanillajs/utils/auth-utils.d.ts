import type { Endpoints } from "../../types.js";
import type { Session } from "../types/index.js";
import type { ForwardedTokens } from "../../types.js";
interface BuildAuthUrlParams {
    endpoints: Endpoints;
    clientId: string;
    redirectUrl: string;
    scopes: string[];
    codeChallenge: string;
    state: string;
    prompt?: string;
    nonce?: string;
}
export declare function buildAuthUrl({ endpoints, clientId, redirectUrl, scopes, codeChallenge, state, prompt, nonce, }: BuildAuthUrlParams): string;
export interface ExtractedTokens {
    idToken: string | null;
    accessToken: string | null;
    refreshToken: string | null;
    forwardedTokens?: ForwardedTokens;
}
/**
 * Extracts all tokens including decoded forwarded tokens from a session
 * This utility handles JWT decoding and token format conversion at the vanilla JS layer
 * making it available to both vanilla JS and React consumers
 */
export declare function extractTokensFromSession(session: Session | null): ExtractedTokens;
export {};
//# sourceMappingURL=auth-utils.d.ts.map