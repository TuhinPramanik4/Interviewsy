{"version":3,"file":"SignalObserver.js","sourceRoot":"","sources":["../../../src/vanillajs/iframe/SignalObserver.ts"],"names":[],"mappings":"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","sourcesContent":["import { AuthEvent } from \"../types/index.js\";\nimport type { AuthenticationEvents } from \"../auth/AuthenticationEvents.js\";\nimport type { createLogger } from \"../utils/logger.js\";\nimport type { AuthResult, User } from \"../types/index.js\";\n\ninterface SignalObserverConfig {\n  textSignals: {\n    success: string;\n    error?: string;\n  };\n  events?: AuthenticationEvents;\n  logger: ReturnType<typeof createLogger>;\n}\n\nexport class SignalObserver {\n  private config: SignalObserverConfig;\n  private observer?: MutationObserver;\n  private authPromiseResolve?: (value: AuthResult) => void;\n  private authPromiseReject?: (reason?: Error) => void;\n  private cleanupCallback?: () => void;\n\n  constructor(\n    config: SignalObserverConfig,\n    authPromiseResolve?: (value: AuthResult) => void,\n    authPromiseReject?: (reason?: Error) => void,\n    cleanupCallback?: () => void,\n  ) {\n    this.config = config;\n    this.authPromiseResolve = authPromiseResolve;\n    this.authPromiseReject = authPromiseReject;\n    this.cleanupCallback = cleanupCallback;\n  }\n\n  public setup(iframeDoc: Document): void {\n    this.config.logger.info(\"Setting up signal observer for iframe document\");\n\n    this.observer = new MutationObserver((mutationsList) => {\n      for (const mutation of mutationsList) {\n        if (!this.isRelevantMutation(mutation)) {\n          continue;\n        }\n\n        if (this.handleSignalNodes(iframeDoc)) {\n          return;\n        }\n\n        this.handleBodyTextSignals(iframeDoc);\n      }\n    });\n\n    this.config.logger.debug(\"Starting observation of iframe body\");\n    this.observer.observe(iframeDoc.body, {\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n\n    // Check for initial signals\n    this.handleInitialSignals(iframeDoc);\n  }\n\n  public disconnect(): void {\n    if (this.observer) {\n      this.config.logger.debug(\"Disconnecting mutation observer\");\n      this.observer.disconnect();\n      this.observer = undefined;\n    }\n  }\n\n  private isRelevantMutation(mutation: MutationRecord): boolean {\n    return mutation.type === \"childList\" || mutation.type === \"characterData\";\n  }\n\n  private handleSignalNodes(iframeDoc: Document): boolean {\n    const successNode = iframeDoc.getElementById(\"civic-auth-success-signal\");\n    const errorNode = iframeDoc.getElementById(\"civic-auth-error-signal\");\n\n    if (this.handleSuccessNode(successNode)) {\n      return true;\n    }\n\n    if (this.handleErrorNode(errorNode)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleSuccessNode(successNode: HTMLElement | null): boolean {\n    if (successNode?.textContent !== this.config.textSignals.success) {\n      return false;\n    }\n\n    this.config.logger.info(\"Success signal detected in iframe by ID\");\n    const userInfo = this.parseUserInfo(successNode);\n\n    this.config.events?.emit(AuthEvent.SIGN_IN_COMPLETE, {\n      detail: \"Success signal detected in iframe\",\n      user: userInfo,\n    });\n\n    this.authPromiseResolve?.({\n      user: userInfo,\n      signalText: successNode.textContent,\n    });\n\n    this.cleanup();\n    return true;\n  }\n\n  private handleErrorNode(errorNode: HTMLElement | null): boolean {\n    if (!errorNode) {\n      return false;\n    }\n\n    this.config.logger.warn(\"Error signal detected in iframe by ID\");\n    const errorMessage =\n      errorNode.textContent || \"Error signal detected in iframe\";\n\n    this.config.events?.emit(AuthEvent.SIGN_IN_ERROR, {\n      detail: errorMessage,\n    });\n\n    this.authPromiseReject?.(new Error(errorMessage));\n    this.cleanup();\n    return true;\n  }\n\n  private handleBodyTextSignals(iframeDoc: Document): void {\n    const bodyText = iframeDoc.body?.textContent || \"\";\n    this.config.logger.debug(\n      \"Checking iframe body text for signals (fallback)\",\n      { bodyText },\n    );\n\n    if (this.handleBodySuccessSignal(bodyText)) {\n      return;\n    }\n\n    this.handleBodyErrorSignal(bodyText);\n  }\n\n  private handleBodySuccessSignal(bodyText: string): boolean {\n    if (!bodyText.includes(this.config.textSignals.success)) {\n      return false;\n    }\n\n    this.config.logger.info(\n      \"Success signal detected in iframe by text content (fallback)\",\n    );\n    this.config.events?.emit(AuthEvent.SIGN_IN_COMPLETE, {\n      detail: \"Success signal detected in iframe (text fallback)\",\n    });\n\n    this.authPromiseResolve?.({\n      signalText: this.config.textSignals.success,\n    });\n\n    this.cleanup();\n    return true;\n  }\n\n  private handleBodyErrorSignal(bodyText: string): boolean {\n    if (\n      !this.config.textSignals.error ||\n      !bodyText.includes(this.config.textSignals.error)\n    ) {\n      return false;\n    }\n\n    this.config.logger.warn(\n      \"Error signal detected in iframe by text content (fallback)\",\n    );\n    this.config.events?.emit(AuthEvent.SIGN_IN_ERROR, {\n      detail: this.config.textSignals.error,\n    });\n\n    this.authPromiseReject?.(new Error(this.config.textSignals.error));\n    this.cleanup();\n    return true;\n  }\n\n  private parseUserInfo(node: HTMLElement): User | undefined {\n    const userInfoAttr = node.getAttribute(\"data-user-info\");\n    if (!userInfoAttr) {\n      return undefined;\n    }\n\n    try {\n      const parsed = JSON.parse(userInfoAttr) as { [key: string]: unknown };\n      // Ensure we have at least an id field\n      if (!parsed.id || typeof parsed.id !== \"string\") {\n        this.config.logger.error(\"User info missing required 'id' field\");\n        return undefined;\n      }\n      return parsed as User;\n    } catch (parseError) {\n      this.config.logger.error(\"Failed to parse user info:\", {\n        error: parseError,\n      });\n      return undefined;\n    }\n  }\n\n  private handleInitialSignals(iframeDoc: Document): void {\n    const successNode = iframeDoc.getElementById(\"civic-auth-success-signal\");\n    const errorNode = iframeDoc.getElementById(\"civic-auth-error-signal\");\n\n    if (\n      this.handleSuccessNode(successNode) ||\n      this.handleErrorNode(errorNode)\n    ) {\n      return;\n    }\n\n    const initialBodyText = iframeDoc.body?.textContent || \"\";\n    this.config.logger.debug(\n      \"Performing initial signal check by text (fallback)\",\n      { initialBodyText },\n    );\n\n    if (\n      this.handleBodySuccessSignal(initialBodyText) ||\n      this.handleBodyErrorSignal(initialBodyText)\n    ) {\n      return;\n    }\n  }\n\n  private cleanup(): void {\n    this.disconnect();\n    this.cleanupCallback?.();\n  }\n}\n"]}