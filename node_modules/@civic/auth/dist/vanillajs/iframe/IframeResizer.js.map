{"version":3,"file":"IframeResizer.js","sourceRoot":"","sources":["../../../src/vanillajs/iframe/IframeResizer.ts"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,IAAK,WAGJ;AAHD,WAAK,WAAW;IACd,6CAA8B,CAAA;IAC9B,2CAA4B,CAAA;AAC9B,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AASD,MAAM,OAAO,kBAAkB;IACrB,MAAM,CAAoB;IAC1B,SAAS,CAAc;IACvB,MAAM,CAAkC;IACxC,eAAe,GAA2C,IAAI,CAAC;IAC/D,mBAAmB,GAAa,EAAE,CAAC;IAE3C,YAAY,MAAyB,EAAE,SAAsB;QAC3D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAEvD,qDAAqD;QACrD,IAAI,CAAC,eAAe,GAAG,CAAC,KAAmB,EAAE,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAEzD,gDAAgD;QAChD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC/D,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,sEAAsE;YACtE,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/C,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC7B,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACb,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,aAAa,CAAC,KAAmB;QACvC,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,KAAK,CAAC,IAAqB,CAAC;YAE5C,uCAAuC;YACvC,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa;gBAC1B,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,aAAa,EAC1C,CAAC;gBACD,OAAO;YACT,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;YAE5D,uBAAuB;YACvB,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,EAAE,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBAC3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC;YAED,wBAAwB;YACxB,IACE,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,MAAM;gBACnC,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,EAClC,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBAChE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,0BAA0B,CAAC,CAAC;YACxE,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAEO,oBAAoB;QAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;YAC9B,IAAI,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACvD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,GAAG,CAAC,CAAC;YACvE,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YACjE,CAAC;QACH,CAAC;IACH,CAAC;IAEO,YAAY,CAAC,MAAc,EAAE,iBAA0B;QAC7D,wBAAwB;QACxB,MAAM,SAAS,GAAG,GAAG,CAAC;QACtB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAEhD,gDAAgD;QAChD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,WAAW,IAAI,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;QAEvC,sDAAsD;QACtD,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,iBAAiB,SAAS,CAAC;QACtE,CAAC;QAED,kEAAkE;QAClE,IAAI,CAAC;YACH,MAAM,SAAS,GACb,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC;YACrE,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC;gBAChC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1C,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1C,IAAI,SAAS,CAAC,eAAe,EAAE,CAAC;oBAC9B,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACpD,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;oBACrD,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,0EAA0E,EAC1E,KAAK,CACN,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,WAAW,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC;QAED,6BAA6B;QAC7B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;YAC7C,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEM,MAAM;QACX,iCAAiC;QACjC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;CACF","sourcesContent":["// Message types for communication between parent and child\nimport { createLogger } from \"../utils/logger.js\";\n\nenum MessageType {\n  RESIZE = \"civic-iframe-resize\",\n  READY = \"civic-iframe-ready\",\n}\n\ninterface IframeMessage {\n  type: MessageType;\n  height?: number;\n  messageCount?: number;\n  suggestedAnimationDuration?: number;\n}\n\nexport class CivicIframeResizer {\n  private iframe: HTMLIFrameElement;\n  private container: HTMLElement;\n  private logger: ReturnType<typeof createLogger>;\n  private messageListener: ((event: MessageEvent) => void) | null = null;\n  private requestSizeTimeouts: number[] = [];\n\n  constructor(iframe: HTMLIFrameElement, container: HTMLElement) {\n    this.iframe = iframe;\n    this.container = container;\n    this.logger = createLogger(\"iframe\");\n\n    this.initializeResizer();\n  }\n\n  private initializeResizer(): void {\n    this.logger.debug(\"Initializing Civic iframe resizer\");\n\n    // Set up message listener for iframe resize messages\n    this.messageListener = (event: MessageEvent) => {\n      this.handleMessage(event);\n    };\n\n    window.addEventListener(\"message\", this.messageListener);\n\n    // Request size from child iframe after it loads\n    this.iframe.addEventListener(\"load\", () => {\n      this.logger.debug(\"Iframe loaded, requesting size from child\");\n      this.requestSizeFromChild();\n\n      // Schedule multiple size requests to ensure we get the correct height\n      const intervals = [100, 500, 1000, 2000, 3000];\n      intervals.forEach((interval) => {\n        const timeoutId = window.setTimeout(() => {\n          this.requestSizeFromChild();\n        }, interval);\n        this.requestSizeTimeouts.push(timeoutId);\n      });\n    });\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const message = event.data as IframeMessage;\n\n      // Only handle messages from our iframe\n      if (\n        !this.iframe.contentWindow ||\n        event.source !== this.iframe.contentWindow\n      ) {\n        return;\n      }\n\n      this.logger.debug(\"Received message from iframe:\", message);\n\n      // Handle ready message\n      if (message.type === MessageType.READY) {\n        this.logger.debug(\"Iframe child is ready\");\n        this.requestSizeFromChild();\n      }\n\n      // Handle resize message\n      if (\n        message.type === MessageType.RESIZE &&\n        typeof message.height === \"number\"\n      ) {\n        this.logger.debug(\"Resizing iframe to height:\", message.height);\n        this.resizeIframe(message.height, message.suggestedAnimationDuration);\n      }\n    } catch (error) {\n      this.logger.debug(\"Error processing iframe message:\", error);\n    }\n  }\n\n  private requestSizeFromChild(): void {\n    if (this.iframe.contentWindow) {\n      try {\n        this.logger.debug(\"Requesting size from iframe child\");\n        this.iframe.contentWindow.postMessage({ type: \"request-size\" }, \"*\");\n      } catch (error) {\n        this.logger.debug(\"Error requesting size from iframe:\", error);\n      }\n    }\n  }\n\n  private resizeIframe(height: number, animationDuration?: number): void {\n    // Ensure minimum height\n    const minHeight = 200;\n    const finalHeight = Math.max(height, minHeight);\n\n    // Apply height to iframe and ensure no overflow\n    this.iframe.style.height = `${finalHeight}px`;\n    this.iframe.style.maxHeight = `${finalHeight}px`;\n    this.iframe.style.overflow = \"hidden\";\n    this.iframe.style.overflowX = \"hidden\";\n    this.iframe.style.overflowY = \"hidden\";\n\n    // Apply transition if animation duration is suggested\n    if (animationDuration) {\n      this.iframe.style.transition = `height ${animationDuration}ms ease`;\n    }\n\n    // Try to inject additional CSS to prevent scrollbars after resize\n    try {\n      const iframeDoc =\n        this.iframe.contentDocument || this.iframe.contentWindow?.document;\n      if (iframeDoc && iframeDoc.body) {\n        iframeDoc.body.style.overflow = \"hidden\";\n        iframeDoc.body.style.overflowX = \"hidden\";\n        iframeDoc.body.style.overflowY = \"hidden\";\n        if (iframeDoc.documentElement) {\n          iframeDoc.documentElement.style.overflow = \"hidden\";\n          iframeDoc.documentElement.style.overflowX = \"hidden\";\n          iframeDoc.documentElement.style.overflowY = \"hidden\";\n        }\n      }\n    } catch (error) {\n      this.logger.debug(\n        \"Could not apply overflow styles to iframe content (likely cross-origin):\",\n        error,\n      );\n    }\n\n    this.logger.debug(`Iframe resized to ${finalHeight}px`);\n  }\n\n  public cleanup(): void {\n    this.logger.debug(\"Cleaning up iframe resizer\");\n\n    if (this.messageListener) {\n      window.removeEventListener(\"message\", this.messageListener);\n      this.messageListener = null;\n    }\n\n    // Clear any pending timeouts\n    this.requestSizeTimeouts.forEach((timeoutId) => {\n      window.clearTimeout(timeoutId);\n    });\n    this.requestSizeTimeouts = [];\n  }\n\n  public resize(): void {\n    // Request size from child iframe\n    this.requestSizeFromChild();\n  }\n}\n"]}