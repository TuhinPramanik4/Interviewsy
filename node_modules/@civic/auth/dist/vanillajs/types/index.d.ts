import type { User } from "../../types.js";
export type { User };
export interface Session {
    accessToken?: string;
    idToken?: string;
    refreshToken?: string;
    user?: User;
    expiresAt?: number;
}
export declare enum AuthEvent {
    INITIALIZED = "initialized",
    SIGN_IN_STARTED = "sign_in_started",
    SIGN_IN_COMPLETE = "sign_in_complete",
    SIGN_IN_ERROR = "sign_in_error",
    SIGN_OUT_STARTED = "sign_out_started",
    SIGN_OUT_COMPLETE = "sign_out_complete",
    SIGN_OUT_ERROR = "sign_out_error",
    TOKEN_REFRESH_STARTED = "token_refresh_started",
    TOKEN_REFRESH_COMPLETE = "token_refresh_complete",
    TOKEN_REFRESH_ERROR = "token_refresh_error",
    SESSION_EXPIRED = "session_expired",
    SESSION_RENEWED = "session_renewed",
    USER_INTERACTION_REQUIRED = "user_interaction_required",
    POPUP_REDIRECT_FALLBACK = "popup_redirect_fallback",
    USER_SESSION_CHANGED = "user_session_changed"
}
export interface AuthResult {
    /** User information returned from authentication */
    user?: User;
    /** Signal text indicating the result */
    signalText?: string;
}
//# sourceMappingURL=index.d.ts.map