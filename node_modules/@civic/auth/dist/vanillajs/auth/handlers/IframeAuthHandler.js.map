{"version":3,"file":"IframeAuthHandler.js","sourceRoot":"","sources":["../../../../src/vanillajs/auth/handlers/IframeAuthHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { AuthEvent } from \"../../types/index.js\";\nimport type { AuthResult } from \"../../types/index.js\";\nimport type { ProcessedCivicAuthConfig } from \"../types/AuthTypes.js\";\nimport { CivicAuthError, CivicAuthErrorCode } from \"../types/AuthTypes.js\";\nimport { SignalObserver } from \"../../iframe/SignalObserver.js\";\nimport { IframeManager } from \"../../iframe/IframeManager.js\";\nimport type { createLogger } from \"../../utils/logger.js\";\nimport { createLogger as createLoggerFn } from \"../../utils/logger.js\";\n\nexport interface IframeAuthHandlerConfig {\n  config: ProcessedCivicAuthConfig;\n  logger: ReturnType<typeof createLogger>;\n  onAuthSuccess: (result: AuthResult) => void;\n  onAuthError: (error: Error) => void;\n  cleanup: () => void;\n  messageHandler: (event: MessageEvent) => void;\n}\n\nexport class IframeAuthHandler {\n  private config: ProcessedCivicAuthConfig;\n  private logger = createLoggerFn(\"iframe-auth\");\n  private onAuthSuccess: (result: AuthResult) => void;\n  private onAuthError: (error: Error) => void;\n  private cleanup: () => void;\n  private messageHandler: (event: MessageEvent) => void;\n  private iframeManager?: IframeManager;\n  private iframeElement?: HTMLIFrameElement;\n  private signalObserver?: SignalObserver;\n\n  constructor(handlerConfig: IframeAuthHandlerConfig) {\n    this.config = handlerConfig.config;\n    this.onAuthSuccess = handlerConfig.onAuthSuccess;\n    this.onAuthError = handlerConfig.onAuthError;\n    this.cleanup = handlerConfig.cleanup;\n    this.messageHandler = handlerConfig.messageHandler;\n  }\n\n  public async handleIframeAuth(\n    fullAuthUrl: string,\n  ): Promise<HTMLIFrameElement> {\n    // Determine the actual display mode for IframeManager first\n    const iframeDisplayMode = this.determineIframeDisplayMode();\n\n    let container = this.getContainerElement();\n\n    // For modal mode, if no container is provided, create one dynamically\n    if (iframeDisplayMode === \"modal\" && !container) {\n      container = this.createModalContainer();\n    }\n\n    if (!container) {\n      const error = new CivicAuthError(\n        \"Target container element not found.\",\n        CivicAuthErrorCode.CONTAINER_NOT_FOUND,\n      );\n      this.logger.error(error.message);\n      throw error;\n    }\n\n    this.logger.debug(\"Creating iframe with modal backdrop\", {\n      url: fullAuthUrl,\n      containerId: container?.id,\n      iframeId: this.config.iframeId,\n      origin: window.location.origin,\n      iframeDisplayMode,\n      containerCreated:\n        iframeDisplayMode === \"modal\" && !this.config.targetContainerElement,\n    });\n\n    this.logger.debug(\n      `🎯 CivicAuth: Creating IframeManager with display mode: ${iframeDisplayMode}`,\n    );\n\n    // Create IframeManager with appropriate display mode\n    this.iframeManager = new IframeManager({\n      container: container,\n      displayMode: iframeDisplayMode,\n      iframeId: this.config.iframeId,\n      /**\n       * Handles iframe closure events initiated by the user.\n       * This includes backdrop clicks, close button clicks, or Escape key presses.\n       * Emits an error event and cleans up the authentication process.\n       */\n      onClose: () => {\n        this.logger.debug(\n          \"Authentication close requested by user (backdrop click, close button, or Escape key)\",\n        );\n        this.config.events?.emit(AuthEvent.SIGN_IN_ERROR, {\n          detail: \"Authentication cancelled by user\",\n        });\n\n        const error = new CivicAuthError(\n          \"Authentication cancelled by user\",\n          CivicAuthErrorCode.USER_CANCELLED,\n        );\n\n        this.onAuthError(error);\n        this.cleanup();\n      },\n    });\n\n    // Create the iframe using IframeManager\n    this.iframeElement = this.iframeManager.createIframe(fullAuthUrl);\n\n    this.config.events?.emit(AuthEvent.SIGN_IN_STARTED, {\n      detail: \"Iframe created with modal backdrop\",\n    });\n\n    this.setupIframeEventHandlers();\n    this.setupIframeNavigationMonitoring();\n\n    return this.iframeElement;\n  }\n\n  public getIframeManager(): IframeManager | undefined {\n    return this.iframeManager;\n  }\n\n  public getIframeElement(): HTMLIFrameElement | undefined {\n    return this.iframeElement;\n  }\n\n  public cleanupIframe(): void {\n    if (this.iframeManager) {\n      this.logger.debug(\"Cleaning up iframe manager\");\n      this.iframeManager.cleanup();\n      this.iframeManager = undefined;\n    }\n\n    if (this.iframeElement) {\n      this.iframeElement = undefined;\n    }\n\n    // Clean up dynamically created modal containers\n    this.cleanupDynamicModalContainer();\n  }\n\n  private cleanupDynamicModalContainer(): void {\n    // Only clean up containers we created dynamically (not user-provided ones)\n    if (!this.config.targetContainerElement) {\n      const dynamicContainer = document.querySelector(\n        `[data-civic-auth-modal=\"true\"]#${this.config.iframeId}-modal-container`,\n      );\n\n      if (dynamicContainer && dynamicContainer.parentNode) {\n        this.logger.debug(\"Removing dynamic modal container\", {\n          containerId: dynamicContainer.id,\n        });\n        dynamicContainer.parentNode.removeChild(dynamicContainer);\n      }\n    }\n  }\n\n  private createModalContainer(): HTMLElement {\n    const container = document.createElement(\"div\");\n    container.id = `${this.config.iframeId}-modal-container`;\n    container.setAttribute(\"data-civic-auth-modal\", \"true\");\n\n    // Append to body for modal overlay\n    document.body.appendChild(container);\n\n    this.logger.debug(\"Created dynamic modal container\", {\n      containerId: container.id,\n    });\n\n    return container;\n  }\n\n  private getContainerElement(): HTMLElement | null {\n    if (!this.config.targetContainerElement) {\n      return null;\n    }\n\n    if (typeof this.config.targetContainerElement === \"string\") {\n      const element = document.getElementById(\n        this.config.targetContainerElement,\n      );\n      if (!element) {\n        this.logger.warn(\n          `Container element with ID \"${this.config.targetContainerElement}\" not found`,\n        );\n      }\n      return element;\n    }\n    return this.config.targetContainerElement;\n  }\n\n  private determineIframeDisplayMode(): \"modal\" | \"embedded\" {\n    // Priority 1: Explicit iframeDisplayMode setting from config\n    // This is the most specific instruction for how the iframe itself should be styled.\n    if (this.config.iframeDisplayMode) {\n      this.logger.debug(\n        `Using configured iframeDisplayMode: ${this.config.iframeDisplayMode}`,\n      );\n      return this.config.iframeDisplayMode;\n    }\n\n    // Priority 2: If iframeDisplayMode is NOT set, and the overall displayMode is \"iframe\",\n    // default the iframe's own rendering style to \"modal\" (user-friendly default).\n    // To get an embedded iframe, iframeDisplayMode: \"embedded\" should be set explicitly.\n    if (this.config.displayMode === \"iframe\") {\n      this.logger.debug(\n        \"Overall displayMode is 'iframe' and iframeDisplayMode is not set, defaulting iframe style to 'modal'.\",\n      );\n      return \"modal\";\n    }\n\n    // Fallback for unexpected scenarios or if IframeAuthHandler is invoked with other displayModes.\n    this.logger.warn(\n      `determineIframeDisplayMode called with overall displayMode: '${this.config.displayMode}' ` +\n        `and no explicit iframeDisplayMode. Defaulting iframe style to 'modal'.`,\n    );\n    return \"modal\";\n  }\n\n  private setupIframeEventHandlers(): void {\n    if (!this.iframeElement) return;\n\n    this.iframeElement.onload = () => {\n      this.logger.info(\"Iframe loaded\", {\n        iframeSrc: this.iframeElement?.src,\n        currentOrigin: window.location.origin,\n        expectedAuthServerOrigin: new URL(this.config.oauthServerBaseUrl)\n          .origin,\n      });\n\n      if (!this.iframeElement?.contentWindow) {\n        const errorMsg = \"Iframe content window not available after load.\";\n        this.logger.error(errorMsg, {\n          iframeSrc: this.iframeElement?.src,\n        });\n\n        const error = new Error(errorMsg);\n        this.onAuthError(error);\n        this.cleanup();\n        return;\n      }\n\n      // Set up postMessage listener for cross-origin communication\n      window.addEventListener(\"message\", this.messageHandler);\n      this.logger.info(\n        \"Added cross-origin message event listener for auth server communication\",\n        {\n          parentOrigin: window.location.origin,\n          authServerOrigin: new URL(this.config.oauthServerBaseUrl).origin,\n        },\n      );\n\n      // Hide iframe content if it's not the login app\n      this.checkAndHideNonLoginContent();\n\n      // Try to detect redirect to our domain\n      this.checkIframeRedirect();\n    };\n\n    this.iframeElement.onerror = (event) => {\n      this.logger.error(\"Iframe load error\", {\n        event,\n        iframeSrc: this.iframeElement?.src,\n        currentOrigin: window.location.origin,\n      });\n      this.config.events?.emit(AuthEvent.SIGN_IN_ERROR, {\n        detail: \"Iframe load error\",\n        error: event,\n      });\n\n      const error = new Error(\"Iframe failed to load.\");\n      this.onAuthError(error);\n      this.cleanup();\n    };\n  }\n\n  private checkAndHideNonLoginContent(): void {\n    try {\n      const currentUrl = this.iframeElement?.contentWindow?.location.href;\n      if (currentUrl) {\n        const currentOrigin = new URL(currentUrl).origin;\n        const expectedAuthServerOrigin = this.config.oauthServerBaseUrl\n          ? new URL(this.config.oauthServerBaseUrl).origin\n          : null;\n        const isOnAuthServer = expectedAuthServerOrigin\n          ? currentOrigin === expectedAuthServerOrigin\n          : false;\n        const isCallbackUrl = this.config.redirectUrl\n          ? currentUrl.startsWith(this.config.redirectUrl)\n          : false;\n\n        if (isOnAuthServer && !isCallbackUrl) {\n          this.logger.info(\n            \"👀 Showing iframe content - confirmed login app on auth server origin\",\n            {\n              currentUrl,\n              isOnAuthServer,\n              isCallbackUrl,\n              currentOrigin,\n              expectedAuthServerOrigin,\n            },\n          );\n          if (this.iframeManager) {\n            this.iframeManager.forceHideLoader();\n          }\n        } else {\n          this.logger.info(\n            \"🙈 Masking iframe content with loader - not login app or on callback URL\",\n            {\n              currentUrl,\n              isOnAuthServer,\n              isCallbackUrl,\n              currentOrigin,\n              expectedAuthServerOrigin,\n              reason: !isOnAuthServer\n                ? expectedAuthServerOrigin\n                  ? \"not on auth server (origin mismatch)\"\n                  : \"auth server origin unknown\"\n                : \"on callback URL (or origin mismatch for login page)\",\n            },\n          );\n          if (this.iframeManager) {\n            this.iframeManager.forceShowLoader();\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug(\n        \"Cannot access iframe URL (likely cross-origin) - assuming login app, showing content.\",\n        { error: error instanceof Error ? error.message : String(error) },\n      );\n      if (this.iframeManager) {\n        this.iframeManager.forceHideLoader();\n      }\n    }\n  }\n\n  private checkIframeRedirect(): void {\n    try {\n      const currentIframeHref =\n        this.iframeElement?.contentWindow?.location.href;\n\n      if (currentIframeHref) {\n        this.logger.debug(\"Iframe current href accessible\", {\n          href: currentIframeHref,\n          redirectUrl: this.config.redirectUrl,\n          startsWithRedirect: currentIframeHref.startsWith(\n            this.config.redirectUrl,\n          ),\n        });\n\n        if (currentIframeHref.startsWith(this.config.redirectUrl)) {\n          this.logger.info(\n            \"Iframe has navigated to redirectUrl (same-origin). Setting up DOM observer.\",\n          );\n\n          // Hide content since we're on callback page now\n          this.checkAndHideNonLoginContent();\n\n          // Set up signal observer for same-origin callback page\n          if (\n            this.iframeElement?.contentDocument &&\n            this.iframeElement.contentDocument.body\n          ) {\n            this.setupSignalObserver(this.iframeElement.contentDocument);\n          } else {\n            this.logger.warn(\n              \"Iframe content document or body not available for signal observer\",\n            );\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug(\n        \"Error checking iframe href (expected for cross-origin)\",\n        {\n          error: error instanceof Error ? error.message : String(error),\n          iframeSrc: this.iframeElement?.src,\n        },\n      );\n      // This is expected when the iframe is on the auth server domain\n      this.logger.info(\n        \"Iframe is on auth server domain - using postMessage for communication\",\n        {\n          parentOrigin: window.location.origin,\n          authServerOrigin: new URL(this.config.oauthServerBaseUrl).origin,\n        },\n      );\n    }\n  }\n\n  private setupSignalObserver(iframeDoc: Document): void {\n    const signalObserver = new SignalObserver(\n      {\n        textSignals: this.config.textSignals,\n        events: this.config.events,\n        logger: this.logger,\n      },\n      this.onAuthSuccess,\n      (error?: Error) =>\n        this.onAuthError(error || new Error(\"Signal observer error\")),\n      () => this.cleanup(),\n    );\n\n    signalObserver.setup(iframeDoc);\n  }\n\n  private setupIframeNavigationMonitoring(): void {\n    // Monitor iframe navigation to detect when it redirects to our callback URL\n    let monitoringInterval: number | undefined = undefined;\n    let lastKnownUrl = \"\";\n\n    const checkIframeNavigation = () => {\n      if (!this.iframeElement?.contentWindow) {\n        if (monitoringInterval) {\n          clearInterval(monitoringInterval);\n        }\n        return;\n      }\n\n      try {\n        const currentUrl = this.iframeElement.contentWindow.location.href;\n\n        if (currentUrl !== lastKnownUrl) {\n          lastKnownUrl = currentUrl;\n          this.logger.debug(\"Iframe navigation detected\", {\n            newUrl: currentUrl,\n            redirectUrl: this.config.redirectUrl,\n            isCallbackUrl: currentUrl.startsWith(this.config.redirectUrl),\n          });\n\n          // Hide content if not on login app\n          this.checkAndHideNonLoginContent();\n\n          // Check if iframe has navigated to our callback URL\n          if (currentUrl.startsWith(this.config.redirectUrl)) {\n            this.logger.info(\n              \"Iframe navigated to callback URL - setting up signal observer\",\n            );\n\n            if (monitoringInterval) {\n              clearInterval(monitoringInterval);\n            }\n\n            // Set up signal observer for same-origin callback page\n            if (\n              this.iframeElement.contentDocument &&\n              this.iframeElement.contentDocument.body\n            ) {\n              this.setupSignalObserver(this.iframeElement.contentDocument);\n            }\n\n            // Also check for URL parameters (code, error) in case of direct callback\n            this.processCallbackUrl(currentUrl);\n          }\n        }\n      } catch {\n        // Expected when iframe is on different origin\n        // Only log if we haven't seen this before\n        if (lastKnownUrl !== \"cross-origin\") {\n          lastKnownUrl = \"cross-origin\";\n          this.logger.debug(\n            \"Iframe on cross-origin domain (expected during auth flow)\",\n          );\n        }\n      }\n    };\n\n    // Check immediately and then every 500ms\n    checkIframeNavigation();\n    monitoringInterval = window.setInterval(checkIframeNavigation, 500);\n\n    // Store cleanup function to clear monitoring\n    const originalCleanup = this.cleanup;\n    this.cleanup = () => {\n      if (monitoringInterval) {\n        clearInterval(monitoringInterval);\n      }\n      originalCleanup();\n    };\n  }\n\n  private processCallbackUrl(currentUrl: string): void {\n    const urlParams = new URLSearchParams(new URL(currentUrl).search);\n    const code = urlParams.get(\"code\");\n    const error = urlParams.get(\"error\");\n\n    if (code) {\n      this.logger.info(\"Authorization code detected in iframe URL\", {\n        code: code.substring(0, 10) + \"...\",\n        hasState: !!urlParams.get(\"state\"),\n      });\n    }\n\n    if (error) {\n      this.logger.error(\"OAuth error detected in iframe URL\", {\n        error,\n        errorDescription: urlParams.get(\"error_description\"),\n      });\n\n      const authError = new CivicAuthError(\n        `OAuth error: ${error}`,\n        CivicAuthErrorCode.INVALID_MESSAGE,\n      );\n\n      this.config.events?.emit(AuthEvent.SIGN_IN_ERROR, {\n        detail: authError.message,\n        error: urlParams.get(\"error_description\") || error,\n      });\n\n      this.onAuthError(authError);\n    }\n  }\n\n  public navigateIframe(url: string): void {\n    if (!this.iframeElement) {\n      this.logger.error(\n        \"Cannot navigate iframe, iframeElement is not available.\",\n      );\n      this.onAuthError(\n        new CivicAuthError(\n          \"Iframe element not found for navigation.\",\n          CivicAuthErrorCode.IFRAME_NOT_FOUND,\n        ),\n      );\n      return;\n    }\n    if (!this.iframeManager) {\n      this.logger.error(\n        \"Cannot navigate iframe, iframeManager is not available.\",\n      );\n      this.onAuthError(\n        new CivicAuthError(\n          \"Iframe manager not found for navigation.\",\n          CivicAuthErrorCode.INTERNAL_ERROR,\n        ),\n      );\n      return;\n    }\n    this.logger.info(\"Navigating iframe to new URL\", { url });\n    this.iframeElement.src = url;\n    // After changing src, existing onload/onmessage handlers in IframeManager\n    // and navigation monitoring in this class should manage visibility and state.\n  }\n}\n"]}