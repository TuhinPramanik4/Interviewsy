{"version":3,"file":"OAuthCallbackHandler.js","sourceRoot":"","sources":["../../../../src/vanillajs/auth/handlers/OAuthCallbackHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * OAuth Callback Handler for Vanilla JavaScript Applications\n *\n * This module provides functionality for handling OAuth redirect/callback pages in vanilla JavaScript\n * applications using the Civic Auth system. It processes the OAuth authorization code flow completion\n * by exchanging authorization codes for access tokens and managing the authentication state.\n *\n * Key responsibilities:\n * - Process OAuth callback URL parameters (code, state)\n * - Exchange authorization codes for access tokens using PKCE\n * - Store tokens and user session data using shared utilities\n * - Create DOM signals for iframe-based authentication flows\n * - Handle error states and cleanup during the OAuth flow\n *\n * This module works in conjunction with:\n * - CivicAuth class for initiating OAuth flows\n * - SignalObserver for detecting authentication completion in iframes\n * - Shared token storage utilities for consistent state management\n *\n * @example\n * ```javascript\n * // Basic usage\n * const config = {\n *   clientId: 'your-client-id',\n *   redirectUrl: 'https://yourapp.com/callback',\n *   oauthServer: 'https://auth.civic.com/oauth',\n *   scopes: ['openid', 'profile', 'email']\n * };\n * const result = await handleOAuthRedirectPage(config);\n * ```\n */\n\nimport {\n  exchangeTokens,\n  buildOauth2Client,\n  getEndpointsWithOverrides,\n  storeTokens as sharedStoreTokens,\n} from \"../../../shared/lib/util.js\";\nimport { getUser } from \"../../../shared/lib/session.js\";\nimport { GenericUserSession } from \"../../../shared/lib/UserSession.js\";\nimport { CodeVerifier } from \"../../../shared/lib/types.js\";\nimport type { getCurrentLogger } from \"../../utils/logger.js\";\nimport { createLogger } from \"../../utils/logger.js\";\nimport { GenericPublicClientPKCEProducer } from \"../../../services/PKCE.js\";\nimport type { AuthStorage, OIDCTokenResponseBody } from \"../../../types.js\";\n\n/**\n * Store tokens using the shared utilities from /shared/lib\n * This ensures consistency with the React implementation and also handles user session storage\n */\nexport async function storeTokens(\n  tokens: OIDCTokenResponseBody,\n  storageAdapter: AuthStorage,\n  loggerInstance = createLogger(\"oauth-callback\"),\n): Promise<object | null> {\n  try {\n    // Use shared storeTokens utility for consistent token storage\n    await sharedStoreTokens(storageAdapter, tokens);\n\n    // Get user info using shared utilities\n    const user = await getUser(storageAdapter);\n    if (user) {\n      // Store user session using shared utilities\n      const userSession = new GenericUserSession(storageAdapter);\n      await userSession.set(user);\n      loggerInstance.info(\n        \"CivicAuth: Tokens and user info stored successfully using shared utilities.\",\n      );\n      return user;\n    } else {\n      loggerInstance.warn(\n        \"CivicAuth: Failed to extract user info from tokens.\",\n      );\n      return null;\n    }\n  } catch (error) {\n    loggerInstance.error(\"CivicAuth: Error storing tokens:\", error);\n    throw error;\n  }\n}\n\nexport interface HandleOAuthRedirectConfig {\n  clientId: string;\n  redirectUrl: string;\n  oauthServer: string;\n  textSignals: {\n    success: string;\n    error: string;\n  };\n  storageAdapter: AuthStorage;\n  logger?: ReturnType<typeof getCurrentLogger>;\n}\n\n/**\n * Handle OAuth redirect page processing for vanilla JavaScript applications.\n * This function processes the OAuth callback URL parameters and exchanges the authorization code for tokens.\n *\n * @param config - Configuration object for handling the OAuth redirect\n * @param config.clientId - OAuth client ID\n * @param config.redirectUrl - URL to redirect to after authentication\n * @param config.oauthServer - OAuth server base URL\n * @param config.textSignals - Text signals for success and error states\n * @param config.storageAdapter - Storage adapter for persisting auth state (required)\n * @param config.logger - Optional logger instance\n * @returns Promise<boolean> - Returns true if callback was handled, false otherwise\n *\n * @example\n * ```javascript\n * // Using storeTokens with default iframe mode\n * const config = {\n *   clientId: 'your-client-id',\n *   redirectUrl: 'https://yourapp.com/callback',\n *   oauthServer: 'https://auth.civic.com/oauth',\n *   scopes: ['openid', 'profile', 'email']\n * };\n * await storeTokens(params, config);\n * ```\n */\nexport async function handleOAuthRedirectPage(\n  config: HandleOAuthRedirectConfig,\n): Promise<boolean> {\n  const loggerInstance = config.logger || createLogger(\"oauth-callback\");\n  const urlParams = new URLSearchParams(window.location.search);\n  const code = urlParams.get(\"code\");\n  const state = urlParams.get(\"state\");\n  const error = urlParams.get(\"error\");\n\n  // Check if we're in a popup window\n  const isPopup = window.opener && window.opener !== window;\n  loggerInstance.info(\"CivicAuth: Callback page context\", {\n    isPopup,\n    hasOpener: !!window.opener,\n    hasCode: !!code,\n    hasError: !!error,\n    currentUrl: window.location.href,\n  });\n\n  if (error) {\n    loggerInstance.error(\"CivicAuth: OAuth error in callback\", { error });\n\n    // Create error signal for iframe mode\n    const errorSignalElement = document.createElement(\"div\");\n    errorSignalElement.id = \"civic-auth-error-signal\";\n    errorSignalElement.textContent = `${config.textSignals.error} (Error: ${error})`;\n    errorSignalElement.style.display = \"none\";\n    document.body.appendChild(errorSignalElement);\n\n    // Send postMessage for popup mode\n    if (isPopup && window.opener) {\n      loggerInstance.info(\"CivicAuth: Sending error message to parent window\", {\n        hasOpener: !!window.opener,\n        openerOrigin: window.opener.origin || \"unknown\",\n        currentUrl: window.location.href,\n        messageData: {\n          type: \"auth_error\",\n          detail: `OAuth error: ${error}`,\n          error: error,\n        },\n      });\n\n      try {\n        window.opener.postMessage(\n          {\n            type: \"auth_error\",\n            detail: `OAuth error: ${error}`,\n            error: error,\n          },\n          \"*\",\n        );\n        loggerInstance.info(\"CivicAuth: Error postMessage sent successfully\");\n      } catch (postMessageError) {\n        loggerInstance.error(\"CivicAuth: Failed to send error postMessage\", {\n          error: postMessageError,\n        });\n      }\n\n      // Close popup after a short delay\n      setTimeout(() => {\n        loggerInstance.info(\"CivicAuth: Closing popup window\");\n        try {\n          window.close();\n        } catch (closeError) {\n          loggerInstance.warn(\"CivicAuth: Failed to close popup window\", {\n            error: closeError,\n          });\n        }\n      }, 1000);\n    } else {\n      loggerInstance.debug(\"CivicAuth: Not in popup mode or no opener\", {\n        isPopup,\n        hasOpener: !!window.opener,\n      });\n    }\n\n    return true;\n  }\n\n  if (code && state) {\n    loggerInstance.info(\"CivicAuth: OAuth callback detected with code:\", code);\n\n    // Use the provided storage adapter from config\n    const storage = config.storageAdapter;\n    const pkceProducer = new GenericPublicClientPKCEProducer(storage);\n\n    try {\n      const endpoints = await getEndpointsWithOverrides(config.oauthServer);\n      const oauth2Client = buildOauth2Client(\n        config.clientId,\n        config.redirectUrl,\n        endpoints,\n      );\n\n      const tokenResponse = await exchangeTokens(\n        code,\n        state,\n        pkceProducer,\n        oauth2Client,\n        config.oauthServer,\n        endpoints,\n      );\n\n      // Get userInfo from storeTokens using shared utilities\n      const userInfo = await storeTokens(\n        tokenResponse,\n        storage,\n        loggerInstance,\n      );\n      loggerInstance.info(\n        \"CivicAuth: Tokens stored successfully using shared utilities.\",\n      );\n\n      // Create success signal for iframe mode\n      const signalElement = document.createElement(\"div\");\n      signalElement.id = \"civic-auth-success-signal\";\n      signalElement.textContent = config.textSignals.success;\n      if (userInfo) {\n        // Embed userInfo if available\n        signalElement.setAttribute(\"data-user-info\", JSON.stringify(userInfo));\n      }\n      signalElement.style.display = \"none\";\n      document.body.appendChild(signalElement);\n      loggerInstance.info(\"CivicAuth: Appended success signal to body.\");\n\n      // Send postMessage for popup mode\n      if (isPopup && window.opener) {\n        loggerInstance.info(\n          \"CivicAuth: Sending success message to parent window\",\n          {\n            hasOpener: !!window.opener,\n            openerOrigin: window.opener.origin || \"unknown\",\n            currentUrl: window.location.href,\n            messageData: {\n              type: \"auth_success\",\n              detail: \"Authentication successful\",\n              hasUser: !!userInfo,\n              hasTokens: !!tokenResponse,\n            },\n          },\n        );\n\n        try {\n          window.opener.postMessage(\n            {\n              type: \"auth_success\",\n              detail: \"Authentication successful\",\n              data: {\n                user: userInfo,\n                tokens: tokenResponse,\n              },\n            },\n            \"*\",\n          );\n          loggerInstance.info(\n            \"CivicAuth: Success postMessage sent successfully\",\n          );\n        } catch (postMessageError) {\n          loggerInstance.error(\n            \"CivicAuth: Failed to send success postMessage\",\n            {\n              error: postMessageError,\n            },\n          );\n        }\n\n        // Close popup after a short delay\n        setTimeout(() => {\n          loggerInstance.info(\"CivicAuth: Closing popup window\");\n          try {\n            window.close();\n          } catch (closeError) {\n            loggerInstance.warn(\"CivicAuth: Failed to close popup window\", {\n              error: closeError,\n            });\n          }\n        }, 1000);\n      } else {\n        loggerInstance.debug(\"CivicAuth: Not in popup mode or no opener\", {\n          isPopup,\n          hasOpener: !!window.opener,\n        });\n      }\n\n      // Clean up the code verifier using shared utilities\n      await storage.delete(CodeVerifier.COOKIE_NAME);\n    } catch (error) {\n      loggerInstance.error(\"CivicAuth: Token exchange error:\", error);\n\n      // Create error signal for iframe mode\n      const errorSignalElement = document.createElement(\"div\");\n      errorSignalElement.id = \"civic-auth-error-signal\";\n      const errorMessage =\n        error instanceof Error ? error.message : \"Unknown error\";\n      errorSignalElement.textContent = `${config.textSignals.error} (Error: ${errorMessage})`;\n      errorSignalElement.style.display = \"none\";\n      document.body.appendChild(errorSignalElement);\n\n      // Send postMessage for popup mode\n      if (isPopup && window.opener) {\n        loggerInstance.info(\n          \"CivicAuth: Sending error message to parent window\",\n          {\n            hasOpener: !!window.opener,\n            openerOrigin: window.opener.origin || \"unknown\",\n            currentUrl: window.location.href,\n            messageData: {\n              type: \"auth_error\",\n              detail: `Token exchange error: ${errorMessage}`,\n              error: errorMessage,\n            },\n          },\n        );\n\n        try {\n          window.opener.postMessage(\n            {\n              type: \"auth_error\",\n              detail: `Token exchange error: ${errorMessage}`,\n              error: errorMessage,\n            },\n            \"*\",\n          );\n          loggerInstance.info(\"CivicAuth: Error postMessage sent successfully\");\n        } catch (postMessageError) {\n          loggerInstance.error(\"CivicAuth: Failed to send error postMessage\", {\n            error: postMessageError,\n          });\n        }\n\n        // Close popup after a short delay\n        setTimeout(() => {\n          loggerInstance.info(\"CivicAuth: Closing popup window\");\n          try {\n            window.close();\n          } catch (closeError) {\n            loggerInstance.warn(\"CivicAuth: Failed to close popup window\", {\n              error: closeError,\n            });\n          }\n        }, 1000);\n      } else {\n        loggerInstance.debug(\"CivicAuth: Not in popup mode or no opener\", {\n          isPopup,\n          hasOpener: !!window.opener,\n        });\n      }\n\n      return true;\n    }\n    return true;\n  }\n  return false;\n}\n"]}