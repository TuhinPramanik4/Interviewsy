import React from "react";
import type { ReactNode } from "react";
import { CivicAuth, type Session, type User } from "../../vanillajs/index.js";
import type { DisplayMode, ForwardedTokens } from "../../types.js";
export type AuthStatusEnum = "authenticated" | "unauthenticated" | "authenticating" | "error" | "signing_out";
export interface CivicAuthContextType {
    auth: CivicAuth | null;
    user: User | null;
    session: Session | null;
    isLoading: boolean;
    authStatus: AuthStatusEnum;
    error: Error | null;
    idToken?: string;
    accessToken?: string;
    refreshToken?: string;
    forwardedTokens?: ForwardedTokens;
    signIn: () => Promise<{
        user: User;
    }>;
    signOut: () => Promise<void>;
    displayMode?: DisplayMode;
}
declare const CivicAuthContext: React.Context<CivicAuthContextType | null>;
export interface CivicAuthContextProviderProps {
    children: ReactNode;
    clientId: string;
    redirectUrl?: string;
    oauthServerBaseUrl?: string;
    scopes?: string[];
    displayMode?: DisplayMode;
    iframeDisplayMode?: "modal" | "embedded";
    onSignIn?: (error?: Error) => void;
    onSignOut?: () => void;
    nonce?: string;
    authProcessTimeout?: number;
}
export declare const CivicAuthContextProvider: React.FC<CivicAuthContextProviderProps>;
export declare const useCivicAuthContext: () => CivicAuthContextType;
export { CivicAuthContext };
//# sourceMappingURL=CivicAuthContext.d.ts.map