import { AuthStatus } from "./types.js";
/**
 * Checks if a popup window is blocked by the browser.
 *
 * This function attempts to open a small popup window and then checks if it was successfully created.
 * If the popup is blocked by the browser, the function returns `true`. Otherwise, it returns `false`.
 *
 * @returns {boolean} - `true` if the popup is blocked, `false` otherwise.
 */
export declare const isPopupBlocked: () => boolean;
type WithoutUndefined<T> = {
    [K in keyof T as undefined extends T[K] ? never : K]: T[K];
};
export declare const withoutUndefined: <T extends { [K in keyof T]: unknown; }>(obj: T) => WithoutUndefined<T>;
/**
 * Converts a string status to AuthStatus enum.
 *
 * @param status - The string status to convert
 * @returns {AuthStatus} - The corresponding AuthStatus enum value
 */
export declare const convertToAuthStatus: (status: string) => AuthStatus;
export {};
//# sourceMappingURL=utils.d.ts.map